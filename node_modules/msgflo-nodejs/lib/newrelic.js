(function() {
  var Transactions, debug, e, error, nr;

  debug = require('debug')('msgflo:newrelic');

  try {
    nr = require('newrelic');
  } catch (error) {
    e = error;
    debug('New Relic not enabled', e.toString());
  }

  Transactions = (function() {
    function Transactions(definition) {
      this.definition = definition;
      this.transactions = {};
    }

    Transactions.prototype.open = function(id, port) {
      if (nr == null) {
        return;
      }
      return this.transactions[id] = {
        id: id,
        start: Date.now(),
        inport: port
      };
    };

    Transactions.prototype.close = function(id, port) {
      var duration, event, name, transaction;
      if (nr == null) {
        return;
      }
      transaction = this.transactions[id];
      if (transaction) {
        duration = Date.now() - transaction.start;
        event = {
          role: this.definition.role,
          component: this.definition.component,
          inport: transaction.inport,
          outport: port,
          duration: duration
        };
        name = 'MsgfloJobCompleted';
        nr.recordCustomEvent(name, event);
        debug('recorded event', name, event);
        return delete this.transactions[id];
      }
    };

    return Transactions;

  })();

  exports.Transactions = Transactions;

}).call(this);
