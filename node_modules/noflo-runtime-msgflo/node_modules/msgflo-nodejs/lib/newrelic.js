var Transactions, debug, nr;

debug = require('debug')('msgflo:newrelic');

if (process.env.NEW_RELIC_LICENSE_KEY != null) {
  nr = require('newrelic');
}

Transactions = class Transactions {
  constructor(definition) {
    this.definition = definition;
    this.transactions = {};
  }

  open(id, port) {
    if (nr == null) {
      return;
    }
    return this.transactions[id] = {
      id: id,
      start: Date.now(),
      inport: port
    };
  }

  close(id, port) {
    var duration, event, name, transaction;
    if (nr == null) {
      return;
    }
    transaction = this.transactions[id];
    if (transaction) {
      duration = Date.now() - transaction.start;
      event = {
        role: this.definition.role,
        component: this.definition.component,
        inport: transaction.inport,
        outport: port,
        duration: duration
      };
      name = 'MsgfloJobCompleted';
      nr.recordCustomEvent(name, event);
      debug('recorded event', name, event);
      return delete this.transactions[id];
    }
  }

};

exports.Transactions = Transactions;
