var normalize, parse, path, program, start;

program = require('commander');

path = require('path');

parse = function(args) {
  program.arguments('<FILE>').action(function(mod, env) {
    return program.modulefile = mod;
  }).option('--name <role>', 'Role name', String, '').option('--broker <uri>', 'Broker address', String, '').parse(args);
  return program;
};

normalize = function(options) {
  var basename;
  if (!options.broker) {
    options.broker = process.env['MSGFLO_BROKER'];
  }
  if (!options.broker) {
    options.broker = process.env['CLOUDAMQP_URL'];
  }
  if (!options.broker) {
    options.broker = 'amqp://localhost';
  }
  options.modulefile = path.resolve(process.cwd(), options.modulefile);
  basename = function(fp) {
    return path.basename(fp, path.extname(fp)).toLowerCase();
  };
  if (!options.modulefile) {
    options.name = basename(options.modulefile);
  }
  return options;
};

start = function(options, callback) {
  var Part, part;
  Part = require(options.modulefile);
  part = Part(options.broker, options.name);
  return part.start(function(err) {
    return callback(err, part);
  });
};

exports.main = function() {
  var options;
  options = parse(process.argv);
  options = normalize(options);
  return start(options, function(err, part) {
    if (err) {
      throw err;
    }
    return console.log(`${options.name} connected to ${options.broker}`);
  });
};
